@page "/"

@inject HttpClient Http
@inject AppState  State
@using Wellness.Client.Components.MonthsMenu
@using Wellness.Model
@using Wellness.Client.Components.UserParticipation.Activities.List

<MatAppBarContainer>
    <MatAppBar Fixed="true">
        <MatAppBarRow>
           <MatAppBarSection>
                    <MatAppBarTitle>Corporate Wellness Manager</MatAppBarTitle>
                </MatAppBarSection>
            <MatAppBarSection Align="@MatAppBarSectionAlign.End">
                <MatIconButton Icon="account_circle" OnClick="@OnClick" @ref="accountButton"></MatIconButton>
                <MatMenu @ref="accountMenu">
                    <MatList>
                        <MatListItem>Item 1</MatListItem>
                        <MatListItem>Item 2</MatListItem>
                    </MatList>
                </MatMenu>
            </MatAppBarSection>
        </MatAppBarRow>
    </MatAppBar>
</MatAppBarContainer>
@if (participation == null)
{
    <div class="progress">
        <div class="progress-bar" role="progressbar" style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"></div>
    </div>
}
else
{

    <div class="main">
        <div class="content">
            <MonthsMenu OnMonthChanged="MonthChanged" />

            <UserActivities ActivityParticipations="@participation.Activities" />
        </div>
    </div>

}


@code {


    private UserParticipation participation;

    protected override async Task OnInitializedAsync()
    {
        participation = CreateMock();
    }

    private UserParticipation CreateMock()
    {

        return new UserParticipation()
        {
            Activities = State.UserActivities.Where(i => i.Date.Year == DateTime.Now.Year && i.Date.Month == DateTime.Now.Month).ToList()
        };
    }

    public async Task MonthChanged(MonthChangedEventArgs args)
    {
        participation.Activities = State.UserActivities.Where(i => i.Date.Year == args.Month.Year && i.Date.Month == args.Month.Number).ToList();
    }


    BaseMatIconButton accountButton;
    BaseMatMenu accountMenu;

    public async Task OnClick(MouseEventArgs e)
    {
        await this.accountMenu.OpenAsync(accountButton.Ref);
    }

}
