@page "/Dashboard"
@page  "/{SelectedUserId}"

@using Microsoft.AspNetCore.Authorization
@using Wellness.Client.Components.MonthsMenu
@using Wellness.Client.Components.UserParticipation.Activities.List
@using Wellness.Client.Components.UserParticipation.Activities.Add
@using Wellness.Client.Components.UserParticipation.Events.List
@using Wellness.Client.Components.UserParticipation.Events.Add
@using Wellness.Client.Components.Shared
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc
@inherits Wellness.Client.Pages.DashboardComponent
@attribute [Authorize]

@if (ViewModel.ActivityParticipations == null)
{
<p>Initializing...</p>
                <div class="m-auto">
                    <MatIcon Icon="cached" Class="iconic-lg spinning-icon"></MatIcon>
                </div> }
            else
            {
<div class="row">
    <div class="col-lg-12 col-md-12">

        <MonthsMenu OnMonthChanged="ViewModel.MonthChanged" />
    </div>
    <div class="col-lg-6 col-md-6 p-2">
        <MatBlazor.MatHeadline5>@Loc["Activities"]</MatBlazor.MatHeadline5>
        <NewActivity ViewModel="@ViewModel"
                     OnActivitySubmissionCompleted="@((e) => { ViewModel.ActivityTabIndex = 1; })" />
        <UserActivities ViewModel="@ViewModel" ActivityParticipations="@ViewModel.ActivityParticipations" OnConfirmDelete="@ViewModel.ActivityParticipationDeleted" />
    </div>
    <div class="col-lg-6 col-md-6">

            
        <UserEvents ViewModel="@ViewModel" EventParticipations="@ViewModel.EventParticipations" OnConfirmDelete="@ViewModel.EventParticipationDeleted" />
    </div>
</div>

        <div class="mat-elevation-z2">


            <div class="content">
                <WellnessMatTabGroup DefaultIndex="1" @bind-ActiveIndex="@ViewModel.EventTabIndex">
                    <MatTab>
                        <LabelContent>
                            <span class="tab-label">@Loc["New"]</span>
                            <MatIcon Icon="@MatIconNames.Add"></MatIcon>
                        </LabelContent>
                        <ChildContent>
                            <NewEvent ViewModel="@ViewModel"
                                      OnFileAttached="@ViewModel.EventFileAttached"
                                      OnEventSubmissionCompleted="@((e) => { ViewModel.EventTabIndex = 1; })" />
                        </ChildContent>
                    </MatTab>
                    <MatTab Label="@Loc["Events"]">
                        @if (ViewModel.LoadingEvents)
                        {
    <div class="m-5">
        <MatProgressBar Indeterminate="true"></MatProgressBar>
    </div> }
else
{
<UserEvents ViewModel="@ViewModel" EventParticipations="@ViewModel.EventParticipations" OnConfirmDelete="@ViewModel.EventParticipationDeleted" />
                        }
                    </MatTab>
                </WellnessMatTabGroup>

            </div>
        </div>}
