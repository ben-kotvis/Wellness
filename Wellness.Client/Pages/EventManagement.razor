@page "/EventManagement"

@using Wellness.Model.ModelValidation

@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc
@inherits Wellness.Client.Pages.EventManagementComponent

<h2>@Loc["EventManagement"]</h2>

<div class="float-right">
    <MatIconButton Icon="add" @onclick="ViewModel.New"></MatIconButton>
</div>
<MatTable Items="@ViewModel.Events" class="wellness-table" PageSize="30" ShowPaging="false" ShowFooter="false">
    <MatTableHeader>
        <th></th>
        <th>@Loc["Name"]</th>
        <th>@Loc["PointsPerEvent"]</th>
        <th>@Loc["AnnualMax"]</th>
        <th>@Loc["Active"]</th>
        <th>@Loc["RequireAttachment"]</th>
    </MatTableHeader>
    <MatTableRow>
        <td>
            <MatIconButton Icon="delete" @onclick="(e => ViewModel.Delete(context.Id))"></MatIconButton>
            <MatIconButton Icon="edit" @onclick="(e => ViewModel.Edit(context.Id))"></MatIconButton>
        </td>
        <td>@context.Name</td>
        <td>@context.Points</td>
        <td>@context.AnnualMaximum</td>
        <td><MatCheckbox @bind-Value="context.Active" Disabled="true"></MatCheckbox></td>
        <td><MatCheckbox @bind-Value="context.RequireAttachment" Disabled="true"></MatCheckbox></td>        
    </MatTableRow>
</MatTable>


<EditForm Model="@ViewModel.NewOrEditEvent" OnValidSubmit="@ViewModel.Save">
    <FluentValidator></FluentValidator>
    <ValidationSummary />
    <MatDialog @bind-IsOpen="ViewModel.EditModalOpen">
        <MatDialogTitle>
            @Loc["Event"]
        </MatDialogTitle>
        <MatDialogContent>
            <p>
                <MatTextField @bind-Value="ViewModel.NewOrEditEvent.Name" Label="@Loc["Name"]"></MatTextField>
                <ValidationMessage For="() => ViewModel.NewOrEditEvent.Name"></ValidationMessage>
            </p>
            <p>

                <MatTextField @bind-Value="ViewModel.NewOrEditEvent.Points" Label="@Loc["PointsPerEvent"]"></MatTextField>
                <ValidationMessage For="() => ViewModel.NewOrEditEvent.Points"></ValidationMessage>
            </p>
            <p>
                <MatTextField @bind-Value="ViewModel.NewOrEditEvent.AnnualMaximum" Label="@Loc["AnnualMax"]"></MatTextField>
                <ValidationMessage For="() => ViewModel.NewOrEditEvent.AnnualMaximum"></ValidationMessage>
            </p>
                <div>
                    <MatCheckbox @bind-Value="ViewModel.NewOrEditEvent.RequireAttachment" Label="@Loc["RequireAttachment"]"></MatCheckbox>
                </div>
                <div>
                    <MatCheckbox @bind-Value="ViewModel.NewOrEditEvent.Active" Label="@Loc["Active"]"></MatCheckbox>
                </div>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton Type="button" OnClick="@(e => { ViewModel.EditModalOpen = false; })">@Loc["Cancel"]</MatButton>
            <MatButton Type="submit">@Loc["OK"]</MatButton>
        </MatDialogActions>
    </MatDialog>
    </EditForm>
