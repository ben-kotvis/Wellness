@page "/FrequentlyAskedQuestionManagement"

@using Markdig
@using Blazored.FluentValidation

@inherits Wellness.Client.Pages.FAQManagementComponent
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc

<h2>@Loc["FAQManagement"]</h2>

    <div class="float-right">
        <MatIconButton Icon="add" @onclick="ViewModel.New"></MatIconButton>
    </div>

    <div>
        <MatAccordion Multi="true">
            @foreach (var item in ViewModel.FAQs)
            {
                <MatExpansionPanel>
                    <MatExpansionPanelSummary>
                        <MatExpansionPanelHeader>@item.Model.Title</MatExpansionPanelHeader>
                    </MatExpansionPanelSummary>
                    <MatExpansionPanelDetails>
                        <div class="float-right">

                            <MatIconButton Icon="edit" @onclick="@((e) => ViewModel.Edit(item.Model))"></MatIconButton>
                        </div>
                        @((MarkupString)Markdown.ToHtml(item.Model.Answer, Pipeline))
                    </MatExpansionPanelDetails>
                </MatExpansionPanel>
            }
        </MatAccordion>
    </div>

<EditForm Model="@ViewModel.NewOrEditFAQ" OnValidSubmit="@ViewModel.Save">
    <FluentValidationValidator />
    <ValidationSummary />
    <MatDialog @bind-IsOpen="ViewModel.EditModalOpen">
        <MatDialogTitle>
            @Loc["FAQ"]
        </MatDialogTitle>
        <MatDialogContent>
            <MatTextField @bind-Value="ViewModel.NewOrEditFAQ.Title" Label="@Loc["TitleLabel"]"></MatTextField>
            <ValidationMessage For="() => ViewModel.NewOrEditFAQ.Title"></ValidationMessage>

            <MatTextField @bind-Value="ViewModel.NewOrEditFAQ.Answer" TextArea="true" FullWidth="true" Label="@Loc["Answer"]"></MatTextField>
            <ValidationMessage For="() => ViewModel.NewOrEditFAQ.Answer"></ValidationMessage>

            <div>
                <MatFileUpload Id="EventFileUpload" OnChange="@FilesReady"></MatFileUpload>
            </div>

            @if (ViewModel.NewOrEditFAQ.Images != default)
            {
                <MatList>
                    @foreach (var image in ViewModel.NewOrEditFAQ.Images)
                    {
                        <MatListItem>

                            @image.Name
                        </MatListItem>
                    }
                </MatList>
            }
            <div>
                <MatCheckbox @bind-Value="ViewModel.NewOrEditFAQ.Active" Label="@Loc["Active"]"></MatCheckbox>
            </div>
        </MatDialogContent>
        <MatDialogActions>
            <MatButton Type="button" OnClick="@ViewModel.Cancel">@Loc["Cancel"]</MatButton>
            <MatButton Type="submit">@Loc["OK"]</MatButton>
        </MatDialogActions>
    </MatDialog>
</EditForm>
