@using Wellness.Model
@using System.Globalization
@using Wellness.Client.Components.UserParticipation.Activities.Add
@using Wellness.Client.Components.Shared
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc
@inherits Components.UserParticipation.Activities.List.UserActivitiesComponent



@if (!ActivityParticipations.Any())
{
    <div class="text-xl-center m-5">
        <span>
            @Loc["NoActivitiesMessage"]
        </span>
    </div>
}
else
{
    <MatTable Items="@ActivityParticipations" class="wellness-table" PageSize="30" Striped="true"
              HeaderRowClass="wellness-table-header-row" RowClass="wellness-table-row" ShowPaging="false" ShowFooter="false">
        <MatTableHeader>
            <th></th>
            <th>@Loc["Activity"]</th>
            <th>@Loc["Minutes"]</th>
            <th>@Loc["Points"]</th>
            <th>@Loc["Date"]</th>
        </MatTableHeader>
        <MatTableRow>
            <td>
                <MatIconButton Icon="delete" OnClick="@((args) => { dialogIsOpen = true; SelectedId = context.Model.Id; })"></MatIconButton>
            </td>
            <td>@context.Model.Activity.Name</td>
            <td>@context.Model.Minutes</td>
            <td>@context.Model.PointsEarned</td>
            <td>@context.Model.SubmissionDate.ToString("MM/dd/yyyy")</td>
        </MatTableRow>
    </MatTable>
}

<ConfirmationDialog IsOpen="@dialogIsOpen" SelectedId="@SelectedId" OnConfirmDelete="@(async (selectedId) => await OnConfirmDelete.InvokeAsync(selectedId))"></ConfirmationDialog>
