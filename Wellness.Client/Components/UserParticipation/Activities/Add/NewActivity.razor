@using Wellness.Model
@using System.Globalization
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Pages.Labels> Loc
@inherits Components.UserParticipation.Activities.Add.NewActivityComponent


<EditForm Model="@ViewModel.NewActivityParticipation" OnValidSubmit="@(async (e) => { await ViewModel.SaveActivity(); await OnActivitySubmissionCompleted.InvokeAsync(null); })">
    <FluentValidator Validator="@ViewModel.ActivityValidation"></FluentValidator>
    <div style="width: 50%; background-color: var(--theme-palette-background-paper);">
        <div>
            <MatSelectItem Class="tab-form-select" @bind-Value="ViewModel.NewActivityParticipation.Activity" Items="@ViewModel.Activities.ToList()"
                           Label="@Loc["SelectActivity"]" Context="selectContext">
                <ItemTemplate>
                    <span>@selectContext.Name</span>
                </ItemTemplate>
            </MatSelectItem>
            <ValidationMessage For="() => ViewModel.NewActivityParticipation.Activity"></ValidationMessage>

        </div>
        <div>
            <MatNumericUpDownField Step="15" Maximum="450" FullWidth="true" @bind-Value="ViewModel.NewActivityParticipation.Minutes" Label="@Loc["NumberofMinutes"]"></MatNumericUpDownField>
            <ValidationMessage For="() => ViewModel.NewActivityParticipation.Minutes"></ValidationMessage>
        </div>
        <div>
            <MatDatePicker FullWidth="true" Label="@Loc["ActivityDate"]" TValue="DateTime" @bind-Value="ViewModel.NewActivityParticipation.SubmissionDate"></MatDatePicker>
            <ValidationMessage For="() => ViewModel.NewActivityParticipation.SubmissionDate"></ValidationMessage>
        </div>
        <div class="text-right p-2">
            <MatButton Type="submit" Raised="true">@Loc["Save"]</MatButton>
        </div>
    </div>

</EditForm>