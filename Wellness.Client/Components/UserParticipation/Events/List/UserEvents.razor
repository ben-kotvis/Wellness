@using Wellness.Model
@using System.Globalization
@using Wellness.Client.Components.UserParticipation.Activities.Add
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc
@inherits Components.UserParticipation.Events.List.UserEventsComponent



@if (!EventParticipations.Any())
{
    <span>@Loc["EmptyEventsMessage"]</span>
}
else
{
    <MatTable Items="@EventParticipations" class="wellness-table" PageSize="30" ShowPaging="false" ShowFooter="false">
        <MatTableHeader>
            <th></th>
            <th>@Loc["Event"]</th>
            <th>@Loc["UploadedFiles"]</th>
            <th>@Loc["Points"]</th>
            <th>@Loc["EventDate"]</th>
        </MatTableHeader>
        <MatTableRow>
            <td>
                <MatIconButton Icon="delete" OnClick="@((args) => { dialogIsOpen = true; SelectedId = context.Model.Id; })"></MatIconButton>
            </td>
            <td>@context.Model.Event.Name</td>
            <td>
                @if (context.Model.Attachment != null)
                    {
                    <span>
                        @context.Model.Attachment?.Name
                        <MatIconButton Icon="open_in_new" OnClick="@((args) => ViewModel.PreviewAttachment(context.Model.Id))"></MatIconButton>
                    </span>
                    }
            </td>
            <td>@context.Model.PointsEarned</td>
            <td>@context.Model.SubmissionDate.ToString("MM/dd/yyyy")</td>
        </MatTableRow>
    </MatTable>
}

<MatDialog @bind-IsOpen="@dialogIsOpen">
    <MatDialogTitle>@Loc["DeleteConfirmationLabel"]</MatDialogTitle>
    <MatDialogContent>
        <p>@Loc["DeleteEventConfirmationMessage"]</p>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { dialogIsOpen = false; })">@Loc["Cancel"]</MatButton>
        <MatButton OnClick="@(async e => { await OnConfirmDelete.InvokeAsync(SelectedId); dialogIsOpen = false; })">@Loc["OK"]</MatButton>
    </MatDialogActions>
</MatDialog>

<MatDialog @bind-IsOpen="@ViewModel.PreviewDialogIsOpen">
    <MatDialogTitle>@Loc["AttachmentView"]</MatDialogTitle>
    <MatDialogContent Class="accordion">
        <object data="@ViewModel.PreviewDataUrl" type="@ViewModel.PreviewFileType"></object>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@(e => { ViewModel.PreviewDialogIsOpen = false; })">@Loc["Close"]</MatButton>
    </MatDialogActions>
</MatDialog>
