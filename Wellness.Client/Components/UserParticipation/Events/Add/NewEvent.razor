@using Wellness.Model
@using System.Globalization
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Pages.Labels> Loc
@using Wellness.Model.ModelValidation
@inherits Components.UserParticipation.Events.Add.NewEventComponent



<EditForm Model="@ViewModel.NewEventParticipation" OnValidSubmit="@(async e => { await OnSaveSelected.InvokeAsync(null); this.StateHasChanged(); })">
    <FluentValidator></FluentValidator>
    <ValidationSummary />

    <div style="width: 50%; background-color: var(--theme-palette-background-paper);">
        <div>
            <MatSelectItem FullWidth="true" @bind-Value="ViewModel.NewEventParticipation.Event" Items="@ViewModel.Events.Select(i => (EventBase)i).ToList()" 
                           Label="@Loc["SelectEvent"]" Context="selectContext">
                <ItemTemplate>
                    <span>@selectContext.Name</span>
                </ItemTemplate>
            </MatSelectItem>

            @*<MatAutocompleteList ShowClearButton="true" FullWidth="true" Items="@ViewModel.Events.Select(i => (EventBase)i).ToList()" Label="@Loc["SelectEvent"]"
                                 Context="autoContext" @bind-Value="ViewModel.NewEventParticipation.Event">
                <ItemTemplate>
                    <div>
                        <span>@autoContext.Name</span>
                    </div>
                </ItemTemplate>
            </MatAutocompleteList>*@
        </div>
        <div>
            <MatFileUpload Id="EventFileUpload" OnChange="@FilesReady"></MatFileUpload>
        </div>
        <div>
            <MatDatePicker FullWidth="true" Label="@Loc["EventDate"]" TValue="DateTime" @bind-Value="ViewModel.NewEventParticipation.SubmissionDate"></MatDatePicker>
        </div>
        <div class="text-right p-2">
            <MatButton Type="submit" Raised="true">@Loc["Save"]</MatButton>
        </div>
    </div>
</EditForm>
