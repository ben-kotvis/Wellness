@using Wellness.Model
@using System.Globalization
@inject Microsoft.Extensions.Localization.IStringLocalizer<Wellness.Client.Properties.Resources> Loc
@using Wellness.Model.ModelValidation
@inherits Components.UserParticipation.Events.Add.NewEventComponent



    <EditForm Model="@ViewModel.NewEventParticipation"  OnValidSubmit="@(async (e) => { await ViewModel.SaveEvent(); await OnEventSubmissionCompleted.InvokeAsync(null); })">
        <FluentValidator Validator="@ViewModel.EventValidation" ></FluentValidator>

        <div style="width: 50%; background-color: var(--theme-palette-background-paper);">
            <div>
                <MatSelectItem Class="tab-form-select" @bind-Value="ViewModel.NewEventParticipation.Event" Items="@ViewModel.Events.ToList()"
                       Label="@Loc["SelectEvent"]" Context="selectContext">
                    <ItemTemplate>
                        <span>@selectContext.Name</span>
                    </ItemTemplate>
                </MatSelectItem>

                <ValidationMessage For="() => ViewModel.NewEventParticipation.Event" ></ValidationMessage>
            </div>
            <div>
                <MatFileUpload Id="EventFileUpload" OnChange="@FilesReady"></MatFileUpload>
                <ValidationMessage For="() => ViewModel.NewEventParticipation.Attachment"></ValidationMessage>
            </div>
            <div>
                <MatDatePicker FullWidth="true" Label="@Loc["EventDate"]" TValue="DateTime" @bind-Value="ViewModel.NewEventParticipation.SubmissionDate"></MatDatePicker>
                <ValidationMessage For="() => ViewModel.NewEventParticipation.SubmissionDate"></ValidationMessage>
            </div>
            <div class="text-right p-2">
                <MatButton Type="submit" Raised="true">@Loc["Save"]</MatButton>
            </div>
        </div>
    </EditForm>
